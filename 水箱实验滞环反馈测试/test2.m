load('test2_data');
% 降采样倍数
downSamplingMultiple = 10;
downSamplingSplInvl = splInvl * downSamplingMultiple;
input = relay_input(1 : downSamplingMultiple : end);
output = relay_output(1 : downSamplingMultiple : end) + 3.5;
dataLen = length(input);
relay_time = (0 : dataLen - 1)' * downSamplingSplInvl;
% figure;
% yyaxis left;
% plot(relay_time, input);
% ylabel('Input');
% yyaxis right;
% plot(relay_time, output);
% ylabel('Output');
% xlabel('Time (s)');
% legend('Input', 'Output', 'location', 'northeastoutside');
idCase = relayid(input, output, downSamplingSplInvl, 'foptd', 'maxDelay', 30, 'settlingTime', 500, 'initKArr', 54.3);
[estNumRank, estDenRank, estDelayRank, isIdSucRank] = identify(idCase, 'rank', 'isKOptimized', false, 'paintResult', true);
[estNumCurve, estDenCurve, estDelayCurve, isIdSucCurve] = identify(idCase, 'curve');
G1 = tf(estNumRank, estDenRank);
G2 = tf(estNumCurve, estDenCurve);
step_time = (0 : 300 - 1)' * splInvl;

step0 = stepRsp(1 : 300);
figure;
plot(step_time, step0);
hold on;
step1 = step(G1, step_time);
step2 = step(G2, step_time);
plot(step_time, step1);
plot(step_time, step2);
legend('True step response', 'The proposed method', "Berner et al.'s method", 'location', 'northeastoutside');
xlabel('time (s)');
ylabel('Step response');
mse1 = mean((step1 - step0) .^ 2);
mse2 = mean((step2 - step0) .^ 2);